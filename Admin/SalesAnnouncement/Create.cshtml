@page
@model kamjaService.Pages.Admin.SalesAnnouncement.CreateModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}
<style>
    #productGroupContainer {
        /*display: flex;*/
    }

    #productGroupContainer > input {
        margin: 5px;
        padding: 7px;
    }
/*    #uploadPdf{
        display: none;
    }*/
</style>
<link href="~/css/jalalidatepicker.css" rel="stylesheet" />
<h2>ایجاد</h2>

<h4>اطلاعیه های فروش</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" id="creationForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label class="control-label"><h6>عنوان</h6></label>
                <input asp-for="SalesAnnouncements.title" class="form-control" />
                <span asp-validation-for="SalesAnnouncements.title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label"><h6>تاریخ</h6></label>
                <input data-jdp asp-for="SalesAnnouncements.date" class="form-control"  autocomplete="off"/>
                <span asp-validation-for="SalesAnnouncements.date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label"><h6>تگ دسته محصولات</h6></label>
                @foreach(var pr in Model.parents)
                {
                    <h6>@pr</h6>
                    <input type="checkbox" class="parentSelect" name="parent" value="@pr">
                    <br />
                }
            </div>
            <div class="form-group">
                <label class="control-label"><h6>تگ گروه محصولات</h6></label>
                <hr />
                <h6 id="productGroupContainer"></h6>
            </div>
            <div class="form-group">
                <label class="control-label"><h6>تگ محصولات</h6></label>
                <hr />
                <h6 id="productGroupingContainer"></h6>
            </div>
@*            <div id="uploadPdf" class="form-group">
                <label class="control-label"><h6>آپلود PDF</h6></label>
                <input asp-for="UploadedFile" class="form-control"  style="height:auto"/>
                <span asp-validation-for="UploadedFile" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-6 col-md-4" style="margin-bottom:7px;max-width: 200px;">
                    <img id="CreateSalesAnnouncementsUploadedImage" class="img-thumbnail" style="display:none;">
                </div>
            </div>*@
            <div class="form-group row">
                <label asp-for="UploadedFile" class="col-sm-3 col-form-label"></label>
                <div class="col-sm-7">
                    <input asp-for="UploadedFile" class="form-control" id="file">
                </div>
            </div>
            <div class="form-group row">

                <div class="col-sm-7 offset-sm-3">
                    <button class="btn btn-primary" id="submit"><h6 class="buttons_h6">ارسال</h6></button>
                </div>
            </div>
        
            
        
        </form>

        
        
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>
    var pgContainer = document.getElementById('productGroupContainer');
    var pgingConatiner = document.getElementById('productGroupingContainer');
    
    $('.parentSelect').change(function() {

        pgingConatiner.innerHTML = '';
        pgContainer.innerHTML = '';

        var selectedParents = [];
        $('.parentSelect:checked').each(function() {
            selectedParents.push($(this).attr('value'));
        });
        
        $.ajax({
            type: 'GET',
            url: '@Url.Page("create", "parent")',
            data: { selectedParents : selectedParents },
            traditional: true,   

            success: function (data) {
                $.each(data, function(key, value) {
                    var checkbox = document.createElement('input');
                    checkbox.type = "checkbox";
                    checkbox.value = value;
                    checkbox.id = key;
                    checkbox.className = "productGroupSelect";
                    checkbox.name = "productGroup";

                    var label = document.createElement('label')
                    label.htmlFor = key;
                    label.appendChild(document.createTextNode(value));

                    pgContainer.append(checkbox);
                    pgContainer.append(label);


                    var productGroupSelects = document.querySelectorAll('.productGroupSelect');
                    productGroupSelects.forEach(function(item, index, arr){
                        item.addEventListener('change', productgroupSelectChangeFunction)
                    });

                });
            }
        });
        
    });


    function productgroupSelectChangeFunction() {

        pgingConatiner.innerHTML = '';

        var selectedProductGroups = [];
        $('.productGroupSelect:checked').each(function() {
            selectedProductGroups.push($(this).attr('value'));
        });
        
        console.log("you clicked on: " + selectedProductGroups)

        $.ajax({
            type: 'GET',
            url: '@Url.Page("create", "productGroup")',
            traditional: true,   

            data: {
                selectedProductGroups: selectedProductGroups,
            },
            success: function (data) {
                console.log("aja data: "+data)
                $.each(data, function(key, value) {
                    var checkbox = document.createElement('input');
                    checkbox.type = "checkbox";
                    checkbox.value = value;
                    checkbox.id = key;
                    checkbox.className = "productGroupingSelect";
                    checkbox.name = "productGrouping";

                    var label = document.createElement('label')
                    label.htmlFor = key;
                    label.appendChild(document.createTextNode(value));

                    pgingConatiner.append(checkbox);
                    pgingConatiner.append(label);
                });
            }
        });
    }

    //$(document).ready(function () {   
    //    $("#SalesAnnouncementSubmitBtn").click(function (e) { 
    //        var title = $("input[name='SalesAnnouncementsTitle']").val();
    //        var date = $("input[name='SalesAnnouncementsDate']").val();
    //        var selectedParents = [];
    //        $('.parentSelect:checked').each(function() {
    //            selectedParents.push($(this).attr('value'));
    //        });
    //        var selectedProductGroups = [];
    //        $('.productGroupSelect:checked').each(function() {
    //            selectedProductGroups.push($(this).attr('value'));
    //        });
    //        var selectedProductGroupings = [];
    //        $('.productGroupingSelect:checked').each(function() {
    //            selectedProductGroupings.push($(this).attr('value'));
    //        });
    //        ////////////////////////////////////////////////////////
    //        var files = $('#fileUpload').prop("files");
    //        formData = new FormData();
	   //     formData.append("MyUploader", files[0]);


    //        ////Serialize the form datas.   
    //        //var valdata = $("#creationForm").serialize();   
    //        ////to get alert popup   
    //        //alert(valdata);   
    //        $.ajax({   
    //            type: 'POST',   

    //            data: { 
    //                title:title,
    //                date:date,
    //                selectedParents:selectedParents,
    //                selectedProductGroups:selectedProductGroups,
    //                selectedProductGroupings:selectedProductGroupings,
    //                formData:formData,

    //            },

    //            beforeSend: function (xhr) {
    //                xhr.setRequestHeader("XSRF-TOKEN",
    //                $('input:hidden[name="__RequestVerificationToken"]').val());
    //            },

    //            url:'@Url.Page("create", "form")', 
                
    //            cache: false,
		  //      contentType: false,
		  //      processData: false,

    //            success: function(data) {
    //                if (data == "success") {
    //                    document.querySelector("#uploadPdf").style.display = "block";

    //                }
    //            }

    //        });   
    //    });   
    //});   
    
    //////////////////////////////////////////////////////////////////////////////////////////////

     $(function () {
        $('#submit').on('click', function (evt) {

            var selectedParents = [];
            $('.parentSelect:checked').each(function() {
                selectedParents.push($(this).attr('value'));
            });
            var selectedProductGroups = [];
            $('.productGroupSelect:checked').each(function() {
                selectedProductGroups.push($(this).attr('value'));
            });
            var selectedProductGroupings = [];
            $('.productGroupingSelect:checked').each(function() {
                selectedProductGroupings.push($(this).attr('value'));
            });

            evt.preventDefault();
            var formData = new FormData(document.forms[0]);
            formData.append('selectedParents', selectedParents);
            formData.append('selectedProductGroups', selectedProductGroups);
            formData.append('selectedProductGroupings', selectedProductGroupings);
            
            $.ajax({
                url: '',
                data: formData,
                contentType: false,
                processData: false,
                type: 'post',
                success: function () {
                    alert('Uploaded by jQuery');
                }
            });
            
        });
    });

    //////////////////////////////////////////////////////////
    // $(function () {
    //    $('#submit').on('click', function (evt) {
    //        evt.preventDefault();
    //        $.ajax({
    //            url: '',
    //            data: new FormData(document.forms[0]),
    //            contentType: false,
    //            processData: false,
    //            type: 'post',
    //            success: function () {
    //                alert('Uploaded by jQuery');
    //            }
    //        });
    //    });
    //});
    //////////////////////////////////////////////////////////

    //$("#btnUpload").on('click',function(){
    //    $("#fileUpload").on('change', function () {
	                        
	   //     var url = '@Url.Page("create", "MyUploader")';
	        

	   //     jQuery.ajax({
		  //      type: 'POST',
		  //      url: url,
		  //      data: formData,
		  //      cache: false,
		  //      contentType: false,
		  //      processData: false,
		  //      beforeSend: function (xhr) {
			 //       xhr.setRequestHeader("XSRF-TOKEN",
				//        $('input:hidden[name="__RequestVerificationToken"]').val());
		  //      },
		  //      success: function (repo) {
			 //       if (repo.status == "success") {
				//        alert("File : " + repo.filename + " is uploaded successfully");
			 //       }
		  //      },
		  //      error: function() {
			 //       alert("Error occurs");
		  //      }
	   //     });
    //    });
    //});
</script>